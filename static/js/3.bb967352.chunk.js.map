{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/User.module.css","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","props","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","selectedPage","styles","onPageSelected","User","user","isInProgress","follow","to","id","src","photos","small","ava","disabled","some","followed","name","status","Users","totalUsersCount","isLoading","Preloader","users","u","selectUsers","state","usersPage","selectPageSize","selectTotalUsersCount","selectSelectedPage","selectIsLoading","selectIsInProgress","UsersContainer","getUsers","this","toggleIsInProgress","React","Component","mapDispatchToProps","selectPage","connect"],"mappings":"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","file":"static/js/3.bb967352.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__av6Aq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"User_ava__1bC5C\"};","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\"\r\n\r\n\r\nlet Paginator = (props) => {\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n\r\n        <div>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>}\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span\r\n                        className={props.selectedPage === p && styles.selectedPage}\r\n                        onClick={() => {\r\n                            props.onPageSelected(p)\r\n                        }}>{p}</span>\r\n                })\r\n\r\n            }\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./User.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, isInProgress, follow}) => {\r\n    return <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={`/profile/${user.id}`}>\r\n                            <img\r\n                                src={user.photos.small != null ? user.photos.small : \"https://i2.wp.com/apptractor.ru/wp-content/uploads/2017/01/1-vafnorCvAbrebwJCOoXGww.jpeg?fit=740%2C493&ssl=1\"}\r\n                                className={styles.ava}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <button disabled={isInProgress.some(id => id == user.id)} onClick={() => {\r\n                            follow(user);\r\n                        }}>{user.followed ? \"Unfollow\" : \"Follow\"}</button>\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div><div>{user.status}</div>\r\n                    </span>\r\n                </span>\r\n    </div>\r\n}\r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nlet Users = (props) => {\r\n    return <div>\r\n        <Paginator selectedPage={props.selectedPage} totalItemsCount={props.totalUsersCount} pageSize={props.pageSize} onPageSelected={props.onPageSelected} portionSize={10}/>\r\n        {  props.isLoading ? <Preloader/> :\r\n            props.users.map(u => <User key={u.id} user={u} isInProgress={props.isInProgress} follow={props.follow}/>)\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;","export const selectUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const selectPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const selectTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const selectSelectedPage = (state) => {\r\n    return state.usersPage.selectedPage\r\n}\r\n\r\nexport const selectIsLoading = (state) => {\r\n    return state.usersPage.isLoading\r\n}\r\n\r\nexport const selectIsInProgress = (state) => {\r\n    return state.usersPage.isInProgress\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {follow, getUsers, selectPage, toggleIsInProgress} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    selectIsInProgress,\r\n    selectIsLoading,\r\n    selectPageSize,\r\n    selectSelectedPage,\r\n    selectTotalUsersCount,\r\n    selectUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.selectedPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageSelected = (p) => {\r\n        this.props.getUsers(p, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n\r\n            <Users\r\n            users={this.props.users}\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            selectedPage={this.props.selectedPage}\r\n            follow={this.props.follow}\r\n            onPageSelected={this.onPageSelected}\r\n            toggleIsInProgress={this.props.toggleIsInProgress}\r\n            isInProgress={this.props.isInProgress}\r\n            isLoading={this.props.isLoading}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         selectedPage: state.usersPage.selectedPage,\r\n//         isLoading: state.usersPage.isLoading,\r\n//         isInProgress: state.usersPage.isInProgress\r\n//     }\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: selectUsers(state),\r\n        pageSize: selectPageSize(state),\r\n        totalUsersCount: selectTotalUsersCount(state),\r\n        selectedPage: selectSelectedPage(state),\r\n        isLoading: selectIsLoading(state),\r\n        isInProgress: selectIsInProgress(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    follow,\r\n    selectPage,\r\n    toggleIsInProgress,\r\n    getUsers\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)"],"sourceRoot":""}