{"version":3,"sources":["redux/dialogs-reducer.js","redux/users-reducer.js","HOC/withLoginRedirect.jsx","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","API/api.js","reportWebVitals.js","redux/profile-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","utils/validators/validators.js","assets/images/Spinner-1s-200px.svg","components/common/Preloader/Preloader.jsx","components/common/FormControls/FormControls.module.css","components/common/FormControls/FormControls.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["ADD_MESSAGE","initialState","messages","id","message","ava","dialogs","name","dialogsReducer","state","action","type","newMessage","addMessageActionCreator","FOLLOW","SET_USERS","SELECT_PAGE","SET_TOTAL","TOGGLE_IS_LOADING","TOGGLE_IS_IN_PROGRESS","users","pageSize","totalUsersCount","selectedPage","isLoading","isInProgress","usersReducer","map","u","userId","followed","console","log","isFetching","filter","followAccept","selectPage","toggleIsLoading","toggleIsInProgress","getUsers","dispatch","a","usersAPI","data","items","totalCount","follow","user","unfollowUser","resultCode","followUser","mapStateToProps","isLoggedIn","auth","withLoginRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","instance","axios","create","withCredentials","baseURL","headers","get","then","response","post","delete","authAPI","getAuth","login","email","password","rememberMe","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","SET_PROFILE","SET_STATUS","DELETE_POST","profile","posts","likesCount","profileReducer","newPost","postId","setStatus","SET_USER_DATA","authReducer","setUserData","authUser","SET_INITIALIZED","initialized","appReducer","reducers","combineReducers","profilePage","messagesPage","usersPage","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","className","nav","item","activeClassName","active","News","Music","Settings","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","toggleEditMode","onChange","e","currentTarget","value","onBlur","autoFocus","onDoubleClick","ProfileInfo","src","description","photos","large","Preloader","Post","likeCount","maxLength10","maxLengthCreator","PostFormRedux","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","MyPosts","postsElements","postsBlock","values","addPost","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","mapDispatchToProps","compose","withRouter","Header","header","loginBlock","onClick","HeaderContainer","maxLength28","LoginFormRedux","Input","error","style","formControl","length","stopSubmit","_error","formData","DialogsContainer","lazy","UsersContainer","App","initializeApp","path","fallback","ReactDOM","render","document","getElementById","maxLength","preloader","width","FormControl","input","meta","element","hasError","touched","children","restprops"],"mappings":"+IAAMA,EAAc,cAEhBC,EAAe,CACfC,SAAU,CACN,CAACC,GAAI,EAAGC,QAAS,KAAMC,IAAK,kEAC5B,CACIF,GAAI,EACJC,QAAS,mBACTC,IAAK,kEAET,CACIF,GAAI,EACJC,QAAS,mCACTC,IAAK,mEAGbC,QAAS,CACL,CAACH,GAAI,EAAGI,KAAM,UACd,CAACJ,GAAI,EAAGI,KAAM,QACd,CAACJ,GAAI,EAAGI,KAAM,YACd,CAACJ,GAAI,EAAGI,KAAM,UACd,CAACJ,GAAI,EAAGI,KAAM,UACd,CAACJ,GAAI,EAAGI,KAAM,WA4BPC,IAxBQ,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIP,SAAS,GAAD,mBACDO,EAAMP,UADL,CAEJ,CACIC,GAAI,EACJC,QAASM,EAAOE,WAChBP,IAAK,oEAGbO,WAAY,KAIpB,QACI,OAAOH,EAEf,OAAOA,GAOJ,IAAMI,EAA0B,SAACD,GAAD,MAAiB,CAACD,KAAMX,EAAaY,gB,6NCnDtEE,EAAS,SACTC,EAAY,YACZC,EAAc,cACdC,EAAY,YACZC,EAAoB,oBACpBC,EAAwB,wBAE1BlB,EAAe,CACfmB,MAAO,GACPC,SAAU,EACVC,gBAAiB,EACjBC,aAAc,EACdC,WAAW,EACXC,aAAc,IAuDHC,IApDM,WAAmC,IAAlCjB,EAAiC,uDAAzBR,EAAcS,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKG,EACD,OAAO,2BACAL,GADP,IAEIW,MAAOX,EAAMW,MAAMO,KAAI,SAAAC,GACnB,OAAIA,EAAEzB,KAAOO,EAAOmB,OACT,2BAAID,GAAX,IAAcE,UAAWF,EAAEE,WACjBF,OAI1B,KAAKb,EACD,OAAO,2BACAN,GADP,IAEIW,MAAOV,EAAOU,QAGtB,KAAKJ,EACD,OAAO,2BACAP,GADP,IAEIc,aAAcb,EAAOa,eAG7B,KAAKN,EACD,OAAO,2BACAR,GADP,IAEIa,gBAAiBZ,EAAOY,kBAGhC,KAAKJ,EACD,OAAO,2BACAT,GADP,IAEIe,WAAYf,EAAMe,YAG1B,KAAKL,EAED,OADAY,QAAQC,IAAItB,EAAOuB,WAAYvB,EAAOmB,OAAQpB,EAAMgB,cAC7C,2BACAhB,GADP,IAEIgB,aAAcf,EAAOuB,WAAP,sBACJxB,EAAMgB,cADF,CACgBf,EAAOmB,SAC/BpB,EAAMgB,aAAaS,QAAO,SAAA/B,GAAE,OAAIA,GAAMO,EAAOmB,YAG3D,QACI,OAAOpB,EAEf,OAAOA,GAOJ,IAAM0B,EAAe,SAACN,GAAD,MAAa,CAAClB,KAAMG,EAAQe,WAE3CO,EAAa,SAACb,GAAD,MAAmB,CAACZ,KAAMK,EAAaO,iBAEpDc,EAAkB,iBAAO,CAAC1B,KAAMO,IAChCoB,EAAqB,SAACT,EAAQI,GAAT,MAAyB,CAACtB,KAAMQ,EAAuBU,SAAQI,eAEpFM,EAAW,SAAChB,EAAcF,GACnC,8CAAO,WAAOmB,GAAP,eAAAC,EAAA,6DACHD,EAASJ,EAAWb,IACpBiB,EAASH,KAFN,SAGcK,IAASH,SAAShB,EAAcF,GAH9C,OAGCsB,EAHD,OAIHH,EAASH,KACTG,GAZiBpB,EAYCuB,EAAKC,MAZK,CAACjC,KAAMI,EAAWK,WAa9CoB,GAXiBlB,EAWCqB,EAAKE,WAXe,CAAClC,KAAMM,EAAWK,qBAKrD,iCALa,IAACA,EAFAF,IAOd,OAAP,uDAYS0B,EAAS,SAACC,GACnB,8CAAO,WAAOP,GAAP,SAAAC,EAAA,yDACHD,EAASF,EAAmBS,EAAK5C,IAAI,KACjC4C,EAAKjB,SAFN,gCAGkBY,IAASM,aAAaD,EAAK5C,IAH7C,OAIyB,IAJzB,OAIU8C,YACLT,EAASL,EAAaY,EAAK5C,KAE/BqC,EAASF,EAAmBS,EAAK5C,IAAI,IAPtC,wCASkBuC,IAASQ,WAAWH,EAAK5C,IAT3C,QAUyB,IAVzB,OAUU8C,YACLT,EAASL,EAAaY,EAAK5C,KAE/BqC,EAASF,EAAmBS,EAAK5C,IAAI,IAbtC,4CAAP,wD,qJCzFAgD,EAAkB,SAAC1C,GAAD,MAAY,CAC9B2C,WAAY3C,EAAM4C,KAAKD,aAGdE,EAAoB,SAACC,GAAe,IAEvCC,EAFsC,4JAGxC,WACI,OAAKC,KAAKC,MAAMN,WACT,cAACG,EAAD,eAAeE,KAAKC,QADQ,cAAC,IAAD,CAAUC,GAAI,eAJb,GAEZC,IAAML,WAWtC,OAFiCM,YAAQV,EAARU,CAAyBL,K,oBCnB9DM,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,sDCDjF,mHAEMC,EAFN,OAEiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAIN3B,EAAW,CACpBH,SADoB,WACwB,IAAlChB,EAAiC,uDAAlB,EAAGF,EAAe,uDAAJ,GACnC,OAAO2C,EACFM,IADE,qBACgB/C,EADhB,kBACsCF,IACxCkD,MAAK,SAAAC,GAAQ,OAAIA,EAAS7B,SAEnCO,WANoB,SAMRrB,GACR,OAAOmC,EACFS,KADE,iBACa5C,IACf0C,MAAK,SAAAC,GAAQ,OAAIA,EAAS7B,SAEnCK,aAXoB,SAWNnB,GACV,OAAOmC,EACFU,OADE,iBACe7C,IACjB0C,MAAK,SAAAC,GAAQ,OAAIA,EAAS7B,UAI1BgC,EAAU,CACnBC,QADmB,WAEf,OAAOZ,EACFM,IADE,YAGXO,MALmB,SAKZC,EAAOC,GAA+B,IAArBC,EAAoB,wDACxC,OAAOhB,EACFS,KADE,aACiB,CAACK,QAAOC,WAAUC,gBAE9CC,OATmB,WAUf,OAAOjB,EACFU,OADE,gBAKFQ,EAAa,CACtBC,WADsB,SACVtD,GACR,OAAOmC,EACFM,IADE,kBACazC,IACf0C,MAAK,SAAAC,GAAQ,OAAIA,EAAS7B,SAEnCyC,UANsB,SAMXvD,GAEP,OAAOmC,EAEFM,IAFE,yBAEoBzC,KAE/BwD,aAZsB,SAYRC,GACV,OAAOtB,EACFuB,IADE,iBACoB,CAACD,c,kFC7CrBE,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,uDCLRO,EAAW,WACXC,EAAc,cACdC,EAAa,aACbC,EAAc,cAEhBlG,EAAe,CACfmG,QAAS,KACTC,MAAO,CACH,CAAClG,GAAI,EAAGC,QAAS,mBAAoBkG,WAAY,GACjD,CAACnG,GAAI,EAAGC,QAAS,qBAAsBkG,WAAY,GACnD,CAACnG,GAAI,EAAGC,QAAS,kCAAmCkG,WAAY,IAEpEhB,OAAQ,IAwCGiB,EArCQ,WAAmC,IAAlC9F,EAAiC,uDAAzBR,EAAcS,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKqF,EACD,OAAO,2BACAvF,GADP,IAEI4F,MAAM,GAAD,mBAAM5F,EAAM4F,OAAZ,CAAmB,CACpBlG,GAAI,EACJC,QAASM,EAAO8F,QAChBF,WAAY,OAIxB,KAAKL,EACD,OAAO,2BACAxF,GADP,IAEI2F,QAAS1F,EAAO0F,UAGxB,KAAKF,EACD,OAAO,2BACAzF,GADP,IAEI6E,OAAQ5E,EAAO4E,SAGvB,KAAKa,EACD,OAAO,2BACA1F,GADP,IAEI4F,MAAO5F,EAAM4F,MAAMnE,QAAO,SAAAuC,GAAI,OAAIA,EAAKtE,IAAMO,EAAO+F,YAG5D,QACI,OAAOhG,EAGf,OAAOA,GAUEiG,EAAY,SAACpB,GAAD,MACpB,CAAC3E,KAAMuF,EAAYZ,W,0BC3DlBqB,EAAgB,gBAElB1G,EAAe,CACf4B,OAAQ,KACRiD,MAAO,KACPD,MAAO,KACPzB,YAAY,GAkBDwD,EAhBK,WAAmC,IAAlCnG,EAAiC,uDAAzBR,EAAcS,EAAW,uCAClD,OAAQA,EAAOC,MACX,KAAKgG,EACD,OAAO,2BACAlG,GACAC,EAAOiC,MAIlB,QACI,OAAOlC,EAEf,OAAOA,GAMEoG,EAAc,SAAChF,EAAQiD,EAAOD,EAAOzB,GAAvB,MAAuC,CAC9DzC,KAAMgG,EACNhE,KAAM,CAACd,SAAQiD,QAAOD,QAAOzB,gBAGpB0D,EAAW,WACpB,8CAAO,WAAOtE,GAAP,uBAAAC,EAAA,sEACkBkC,IAAQC,UAD1B,OAE8B,KAD7BJ,EADD,QAEU7B,KAAKM,aAAmB,EACRuB,EAAS7B,KAAKA,KAAlCxC,EAD2B,EAC3BA,GAAI0E,EADuB,EACvBA,MAAOC,EADgB,EAChBA,MAChBtC,EAASqE,EAAY1G,EAAI0E,EAAOC,GAAO,KAJxC,2CAAP,uD,kBC/BEiC,EAAkB,kBAEpB9G,EAAe,CACf+G,aAAa,GAiBFC,EAfI,WAAmC,IAAlCxG,EAAiC,uDAAzBR,EAAcS,EAAW,uCACjD,OAAQA,EAAOC,MACX,KAAKoG,EACD,OAAO,2BACAtG,GADP,IAEIuG,aAAa,IAGrB,QACI,OAAOvG,EAEf,OAAOA,GCXPyG,EAAWC,YAAgB,CAC3BC,YAAab,EACbc,aAAc7G,IACd8G,UAAW5F,IACX2B,KAAMuD,EACNW,KAAMC,IACNC,IAAKR,IAGLS,EAAQC,YAAYT,EAAUU,YAAgBC,MAElDC,OAAOJ,MAAQA,EAEAA,Q,iFCWAK,EA5BA,WACX,OACI,sBAAKC,UAAWC,MAAhB,UACI,qBAAKD,UAAWE,OAAhB,SACI,cAAC,IAAD,CAASC,gBAAiBC,SAAQzE,GAAG,WAArC,uBAEJ,qBAAKqE,UAAWE,OAAhB,SACI,cAAC,IAAD,CAASC,gBAAiBC,SAAQzE,GAAG,WAArC,wBAEJ,qBAAKqE,UAAWE,OAAhB,SACI,cAAC,IAAD,CAASC,gBAAiBC,SAAQzE,GAAG,SAArC,qBAEJ,qBAAKqE,UAAWE,OAAhB,SACI,cAAC,IAAD,CAASC,gBAAiBC,SAAQzE,GAAG,QAArC,oBAEJ,qBAAKqE,UAAWE,OAAhB,SACI,cAAC,IAAD,CAASC,gBAAiBC,SAAQzE,GAAG,SAArC,qBAEJ,qBAAKqE,UAAWE,OAAhB,SACI,cAAC,IAAD,CAASC,gBAAiBC,SAAQzE,GAAG,YAArC,wBAEJ,qBAAKqE,UAAWE,OAAhB,SACI,cAAC,IAAD,CAASC,gBAAiBC,SAAQzE,GAAG,WAArC,2B,QChBD0E,EARF,SAAC3E,GACV,OACI,wCCKO4E,EARD,SAAC5E,GACX,OACI,yCCMO6E,EARE,SAAC7E,GACd,OACI,4C,mBCFoBE,IAAML,U,OC6BnBiF,EA7BgB,SAAC9E,GAE5B,MAA8B+E,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAAS/E,EAAM4B,QAAzC,mBAAKA,EAAL,KAAaoB,EAAb,KAEAkC,qBAAU,WACNlC,EAAUhD,EAAM4B,UACjB,CAAC5B,EAAM4B,SAEV,IAAMuD,EAAiB,WACnBF,GAAaD,GACTA,GAAUhF,EAAM2B,aAAaC,IAOrC,OACI,8BACMoD,EAEI,uBAAOI,SARE,SAACC,GACpBrC,EAAUqC,EAAEC,cAAcC,QAOiBC,OAAQL,EAAgBM,WAAW,EAC7DF,MAAO3D,GAAU,cAFxB,sBAAM8D,cAAeP,EAArB,SAAsCnF,EAAM4B,QAAU,iBCEzD+D,GAnBK,SAAC3F,GACjB,OAAKA,EAAM0C,QAKP,gCACI,8BACI,qBAAKkD,IAAI,gHAEb,sBAAKtB,UAAWuB,cAAhB,UACI,qBAAKvB,UAAW3H,MAAKiJ,IAAK5F,EAAM0C,QAAQoD,OAAOC,QAC/C,cAAC,EAAD,CAAwBnE,OAAQ5B,EAAM4B,OAAQD,aAAc3B,EAAM2B,qBAVnE,cAACqE,EAAA,EAAD,K,UCQAC,GAbF,SAACjG,GACV,IAAOtD,EAAsBsD,EAAtBtD,QAASwJ,EAAalG,EAAbkG,UAChB,OACI,sBAAK5B,UAAWE,QAAhB,UACI,qBAAKoB,IAAI,oJACRlJ,EACD,8BACI,yCAAYwJ,W,+CCHtBC,GAAcC,aAAiB,IAS/BC,GAAgBC,aAAU,CAC5BzC,KAAM,QADYyC,EAPL,SAACtG,GACd,OAAO,uBAAMuG,SAAUvG,EAAMwG,aAAtB,UACH,8BAAK,cAACC,GAAA,EAAD,CAAOC,YAAa,eAAgBC,UAAWC,KAAU/J,KAAM,UAAWgK,SAAU,CAACC,KAAeX,QACzG,8BAAK,sDA6BEY,OArBf,SAAiB/G,GACb3B,QAAQC,IAAI,UACZ,IAAI0I,EAAgBhH,EAAM2C,MAAM1E,KAAI,SAAA8C,GAAI,OACpC,cAAC,GAAD,CAAMrE,QAASqE,EAAKrE,QAASkG,WAAY7B,EAAK6B,gBAOlD,OACI,sBAAK0B,UAAW2C,cAAhB,UACI,0CACA,cAACZ,GAAD,CAAeE,SAPT,SAACW,GACXlH,EAAMmH,QAAQD,EAAOpE,YAOjB,qBAAKwB,UAAW3B,SAAhB,SACKqE,Q,SCbFI,GAFUjH,cAdH,SAACpD,GACnB,MAAO,CACH4F,MAAO5F,EAAM2G,YAAYf,UAIR,SAAC7D,GACtB,MAAO,CACHqI,QAAS,SAACrE,GACNhE,EbyCwB,SAACgE,GAAD,MAAc,CAAC7F,KAAMqF,EAAUQ,WazC9CuE,CAAqBvE,QAKjB3C,CAA6C4G,ICNvDO,GAVC,SAACtH,GACb,OAEI,iCACI,cAAC,GAAD,CAAa0C,QAAS1C,EAAM0C,QAASd,OAAQ5B,EAAM4B,OAAQD,aAAc3B,EAAM2B,eAC/E,cAAC,GAAD,Q,UCDN4F,G,uKAEF,WACI,IAAIpJ,EAAS4B,KAAKC,MAAMwH,MAAMC,OAAOtJ,OAChCA,IAAQA,EAAS,OACtB4B,KAAKC,MAAMyB,WAAWtD,GACtB4B,KAAKC,MAAM0B,UAAUvD,K,oBAGzB,WAEI,OACI,cAAC,GAAD,2BAAa4B,KAAKC,OAAlB,IAAyB0C,QAAS3C,KAAKC,MAAM0C,QAASd,OAAQ7B,KAAKC,MAAM4B,OAAQD,aAAc5B,KAAKC,MAAM2B,oB,GAZvFzB,IAAML,WAsBjC6H,GAAqB,CACrBjG,WfoCsB,SAACtD,GACvB,8CAAO,WAAOW,GAAP,eAAAC,EAAA,6DACEZ,IACDA,EAAS,GAFV,SAIcqD,IAAWC,WAAWtD,GAJpC,OAICc,EAJD,OAKHH,EAdH,CAAC7B,KAAMsF,EAAaG,QAcGzD,IALjB,2CAAP,uDepCAyC,Uf6CqB,SAACvD,GACtB,8CAAO,WAAOW,GAAP,eAAAC,EAAA,sEACkByC,IAAWE,UAAUvD,GADvC,OACC2C,EADD,OAEHhC,EAASkE,EAAUlC,EAAS7B,OAFzB,2CAAP,uDe7CA0C,afmDwB,SAACC,GACzB,8CAAO,WAAO9C,GAAP,SAAAC,EAAA,sEACkByC,IAAWG,aAAaC,GAD1C,OAE8B,IAF9B,OAEU3C,KAAKM,YACdT,EAASkE,EAAUpB,IAHpB,2CAAP,wDejDW+F,eAAQxH,cAXD,SAACpD,GAAD,MAAY,CAC9B2F,QAAS3F,EAAM2G,YAAYhB,QAC3Bd,OAAQ7E,EAAM2G,YAAY9B,UASkB8F,IAAqBE,IAAYhI,KAAlE+H,CAAqFJ,I,SClBrFM,GAdA,SAAC7H,GACZ,OACI,yBAAQsE,UAAWwD,UAAnB,UACI,qBAAKlC,IAAI,yEACT,qBAAKtB,UAAWyD,cAAhB,SACK/H,EAAMN,WACD,gCAAMM,EAAMmB,MAAM,wBAAQ6G,QAAShI,EAAMuB,OAAvB,wBAClB,cAAC,IAAD,CAAStB,GAAI,SAAb,0BCNhBgI,G,4JAGF,WACI,OAAO,cAAC,GAAD,eAAYlI,KAAKC,Y,GAJFE,IAAML,WAc9B6H,GAAqB,CAEvBnG,OhBmCkB,WAClB,8CAAO,WAAOzC,GAAP,SAAAC,EAAA,sEACkBkC,IAAQM,SAD1B,OAE8B,IAF9B,OAEUtC,KAAKM,YACdT,EAASqE,EAAY,KAAM,KAAM,MAAM,IAHxC,2CAAP,wDgBjCWhD,iBAXS,SAACpD,GAAD,MAAY,CAChC2C,WAAY3C,EAAM4C,KAAKD,WACvByB,MAAOpE,EAAM4C,KAAKwB,MAClBI,OAAQxE,EAAM4C,KAAK4B,UAQiBmG,GAAzBvH,CAA6C8H,I,oBCftDC,GAAc9B,aAAiB,IAuB/B+B,GAAiB7B,aAAU,CAC7BzC,KAAM,SADayC,EArBL,SAACtG,GACf,OACI,uBAAMuG,SAAUvG,EAAMwG,aAAtB,UACI,8BACI,cAACC,GAAA,EAAD,CAAOC,YAAa,QAAS7J,KAAM,QAAS8J,UAAWyB,KAAOvB,SAAU,CAACC,KAAeoB,QAE5F,8BACI,cAACzB,GAAA,EAAD,CAAOC,YAAa,WAAY7J,KAAM,WAAYI,KAAM,WAAY0J,UAAWyB,KACxEvB,SAAU,CAACC,KAAeoB,QAErC,gCACI,cAACzB,GAAA,EAAD,CAAOE,UAAW,QAAS9J,KAAM,aAAcI,KAAM,aADzD,kBAGC+C,EAAMqI,OAAS,qBAAK/D,UAAWgE,KAAMC,YAAc,IAAMD,KAAMD,MAAhD,SAAwDrI,EAAMqI,QAC9E,8BACI,oDA+BDlI,iBAJS,SAACpD,GAAD,MAAY,CAChC2C,WAAY3C,EAAM4C,KAAKD,cAGa,CAACyB,MjBbpB,SAACC,EAAOC,EAAUC,GACnC,8CAAO,WAAOxC,GAAP,iBAAAC,EAAA,sEACkBkC,IAAQE,MAAMC,EAAOC,EAAUC,GADjD,OAE8B,KAD7BR,EADD,QAEU7B,KAAKM,WACdT,EAASsE,MAEL1G,EAAUoE,EAAS7B,KAAKzC,SAASgM,OAAS,EAAI1H,EAAS7B,KAAKzC,SAAS,GAAK,6BAC9EsC,EAAS2J,YAAW,QAAS,CAACC,OAAQhM,MANvC,2CAAP,wDiBYWyD,EArBD,SAACH,GAKX,OAAIA,EAAMN,WACC,cAAC,IAAD,CAAUO,GAAI,aAIrB,gCACI,uCACA,cAACkI,GAAD,CAAgB5B,SAXP,SAACoC,GACd3I,EAAMmB,MAAMwH,EAASxH,MAAOwH,EAAStH,SAAUsH,EAASrH,qBCrB1DsH,GAAmB1I,IAAM2I,MAAK,kBAAM,iCACpCC,GAAiB5I,IAAM2I,MAAK,kBAAM,iCAElCE,G,uKACF,WACIhJ,KAAKC,MAAMgJ,kB,oBAEf,WACI,OAAKjJ,KAAKC,MAAMsD,YAIR,cAFhB,CAEgB,OAAKgB,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO2E,KAAK,WAAZ,SACI,cAAC,WAAD,CAAUC,SAAU,cAAClD,EAAA,EAAD,IAApB,SACI,cAAC4C,GAAD,QAIR,cAAC,IAAD,CAAOK,KAAK,oBAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACI,cAAC,WAAD,CAAUC,SAAU,cAAClD,EAAA,EAAD,IAApB,SACI,cAAC8C,GAAD,QAIR,cAAC,IAAD,CAAOG,KAAK,SAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,EAAD,cAlCY,cAACjD,EAAA,EAAD,Q,GAL1B9F,IAAML,WAqDT8H,eAAQC,IAAYzH,cAJX,SAACpD,GAAD,MAAY,CAChCuG,YAAavG,EAAMgH,IAAIT,eAGiC,CAAC0F,cjB7ChC,WACzB,OAAO,SAAClK,GACUA,EAASsE,KACfvC,MAAK,kBAAM/B,EALe,CAAC7B,KAAMoG,WiB+ClCsE,CAA+DoB,IC/D9EI,IAASC,OACL,cAAC,IAAD,UACI,cAAC,KAAD,CAAUpF,MAAOA,EAAjB,SACI,cAAC,GAAD,QAGRqF,SAASC,eAAe,SAO5BxH,K,gCCvBA,oEAAO,IAAMgF,EAAgB,SAAAvB,GACzB,IAAIA,EACJ,MAAO,qBAGEa,EAAmB,SAACmD,GAAD,OAAe,SAAChE,GAC5C,GAAIA,GAASA,EAAMiD,OAASe,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,gCCN5B,UAA0B,6C,cCQ1BvD,IAJC,SAAChG,GACb,OAAQ,qBAAK4F,IAAK4D,EAAWlB,MAAO,CAACmB,MAAO,a,mBCJhDrJ,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,6OCEpEqJ,EAAc,SAAC,GAAqC,EAApCC,MAAqC,IAA9BC,EAA6B,EAA7BA,KAAkB5J,GAAW,EAAvB6J,QAAuB,kBAC5CC,EAAWF,EAAKG,SAAWH,EAAKvB,MACtC,OACI,sBAAK/D,UAAWgE,IAAMC,YAAc,KAAOuB,EAAWxB,IAAMD,MAAQ,IAApE,UACKrI,EAAMgK,SAAS,uBACfF,GAAY,+BAAOF,EAAKvB,YAK5BzB,EAAW,SAAC5G,GACrB,IAAO2J,EAAsC3J,EAAtC2J,MAAyBM,GAAajK,EAA/B4J,KAA+B5J,EAAzB6J,QAApB,YAA6C7J,EAA7C,IACA,OAAO,cAAC0J,EAAD,2BAAiB1J,GAAjB,aAAwB,oDAAc2J,GAAWM,QAE/C7B,EAAQ,SAACpI,GAClB,IAAO2J,EAAsC3J,EAAtC2J,MAAyBM,GAAajK,EAA/B4J,KAA+B5J,EAAzB6J,QAApB,YAA6C7J,EAA7C,IACA,OAAO,cAAC0J,EAAD,2BAAiB1J,GAAjB,aAAwB,iDAAW2J,GAAWM,S,mBClBzD7J,EAAOC,QAAU,CAAC,IAAM,yBAAyB,YAAc,mC,mBCA/DD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,mBCAnED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,8B","file":"static/js/main.6ec9ac5e.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: \"Hi\", ava: \"https://s2.coinmarketcap.com/static/img/coins/200x200/9231.png\"},\r\n        {\r\n            id: 2,\r\n            message: \"What's going on?\",\r\n            ava: \"https://s2.coinmarketcap.com/static/img/coins/200x200/9231.png\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"I want to invite you to a party!\",\r\n            ava: \"https://s2.coinmarketcap.com/static/img/coins/200x200/9231.png\"\r\n        }\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: \"Maryan\"},\r\n        {id: 2, name: \"Vlad\"},\r\n        {id: 3, name: \"Svetlana\"},\r\n        {id: 4, name: \"Vadzim\"},\r\n        {id: 5, name: \"Viktor\"},\r\n        {id: 6, name: \"Sasha\"}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    {\r\n                        id: 4,\r\n                        message: action.newMessage,\r\n                        ava: \"https://s2.coinmarketcap.com/static/img/coins/200x200/9231.png\"\r\n                    }\r\n                ],\r\n                newMessage: ''\r\n            }\r\n\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport default dialogsReducer;\r\n\r\n\r\nexport const addMessageActionCreator = (newMessage) => ({type: ADD_MESSAGE, newMessage});","import {authAPI, usersAPI} from \"../API/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SELECT_PAGE = 'SELECT_PAGE';\r\nconst SET_TOTAL = 'SET_TOTAL';\r\nconst TOGGLE_IS_LOADING = \"TOGGLE_IS_LOADING\";\r\nconst TOGGLE_IS_IN_PROGRESS = \"TOGGLE_IS_IN_PROGRESS\"\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    selectedPage: 1,\r\n    isLoading: false,\r\n    isInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: !u.followed}\r\n                    } else return u;\r\n                })\r\n            }\r\n            break;\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n            break;\r\n        case SELECT_PAGE:\r\n            return {\r\n                ...state,\r\n                selectedPage: action.selectedPage\r\n            }\r\n            break;\r\n        case SET_TOTAL:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n            break;\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: !state.isLoading\r\n            }\r\n            break;\r\n        case TOGGLE_IS_IN_PROGRESS:\r\n            console.log(action.isFetching, action.userId, state.isInProgress);\r\n            return {\r\n                ...state,\r\n                isInProgress: action.isFetching\r\n                    ? [...state.isInProgress, action.userId]\r\n                    : state.isInProgress.filter(id => id != action.userId)\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n\r\n\r\nexport const followAccept = (userId) => ({type: FOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const selectPage = (selectedPage) => ({type: SELECT_PAGE, selectedPage});\r\nexport const setTotal = (totalUsersCount) => ({type: SET_TOTAL, totalUsersCount});\r\nexport const toggleIsLoading = () => ({type: TOGGLE_IS_LOADING});\r\nexport const toggleIsInProgress = (userId, isFetching) => ({type: TOGGLE_IS_IN_PROGRESS, userId, isFetching});\r\n\r\nexport const getUsers = (selectedPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(selectPage(selectedPage));\r\n        dispatch(toggleIsLoading());\r\n        let data = await usersAPI.getUsers(selectedPage, pageSize)\r\n        dispatch(toggleIsLoading());\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotal(data.totalCount));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const follow = (user) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsInProgress(user.id, true));\r\n        if (user.followed) {\r\n            let data = await usersAPI.unfollowUser(user.id)\r\n            if (data.resultCode === 0) {\r\n                dispatch(followAccept(user.id));\r\n            }\r\n            dispatch(toggleIsInProgress(user.id, false));\r\n        } else {\r\n            let data = await usersAPI.followUser(user.id)\r\n            if (data.resultCode === 0) {\r\n                dispatch(followAccept(user.id));\r\n            }\r\n            dispatch(toggleIsInProgress(user.id, false));\r\n        }\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isLoggedIn: state.auth.isLoggedIn\r\n});\r\n\r\nexport const withLoginRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isLoggedIn) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let connectedWithLoginRedirect = connect(mapStateToProps)(RedirectComponent);\r\n\r\n    return connectedWithLoginRedirect;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1DZCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__Yyc3a\",\"item\":\"Navbar_item__2KPnR\",\"active\":\"Navbar_active__yd_uJ\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"8e112cec-0a47-47b9-8ced-2dbb9ab84267\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers (selectedPage = 1, pageSize = 10) {\r\n        return instance\r\n            .get(`users?page=${selectedPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    followUser (userId) {\r\n        return instance\r\n            .post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollowUser (userId) {\r\n        return instance\r\n            .delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth () {\r\n        return instance\r\n            .get(`auth/me`)\r\n    },\r\n    login (email, password, rememberMe = false) {\r\n        return instance\r\n            .post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout () {\r\n        return instance\r\n            .delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance\r\n            .get(`profile/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getStatus (userId) {\r\n\r\n        return instance\r\n\r\n            .get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus (status) {\r\n        return instance\r\n            .put(`profile/status`, {status})\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {profileAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_PROFILE = 'SET_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 3},\r\n        {id: 2, message: \"It's my first post\", likesCount: 5},\r\n        {id: 3, message: \"Does some one want to hang out?\", likesCount: 1}\r\n    ],\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {\r\n                    id: 5,\r\n                    message: action.newPost,\r\n                    likesCount: 0\r\n                }]\r\n            }\r\n            break;\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n            break;\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n            break;\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id != action.postId)\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost});\r\n\r\nexport const setProfile = (profile) =>\r\n    ({type: SET_PROFILE, profile});\r\n\r\nexport const setStatus = (status) =>\r\n    ({type: SET_STATUS, status});\r\n\r\nexport const deletePost = (postId) =>\r\n    ({type: DELETE_POST, postId});\r\n\r\nexport const getProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        let data = await profileAPI.getProfile(userId)\r\n        dispatch(setProfile(data));\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data));\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n}\r\n","import {authAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isLoggedIn: false\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport default authReducer;\r\n\r\nexport const setUserData = (userId, email, login, isLoggedIn) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, email, login, isLoggedIn}\r\n});\r\n\r\nexport const authUser = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.getAuth()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setUserData(id, login, email, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authUser());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Email or password is wrong\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserData(null, null, null, false))\r\n        }\r\n    }\r\n}","import {authAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {authUser} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport default appReducer;\r\n\r\nexport const initializingSuccess = () => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authUser());\r\n        promise.then(() => dispatch(initializingSuccess()));\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport {nav, item, active} from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={nav}>\r\n            <div className={item}>\r\n                <NavLink activeClassName={active} to='/profile'>Profile</NavLink>\r\n            </div>\r\n            <div className={item}>\r\n                <NavLink activeClassName={active} to='/dialogs'>Messages</NavLink>\r\n            </div>\r\n            <div className={item}>\r\n                <NavLink activeClassName={active} to='/users'>Users</NavLink>\r\n            </div>\r\n            <div className={item}>\r\n                <NavLink activeClassName={active} to='/news'>News</NavLink>\r\n            </div>\r\n            <div className={item}>\r\n                <NavLink activeClassName={active} to='/music'>Music</NavLink>\r\n            </div>\r\n            <div className={item}>\r\n                <NavLink activeClassName={active} to='/settings'>Settings</NavLink>\r\n            </div>\r\n            <div className={item}>\r\n                <NavLink activeClassName={active} to='/friends'>Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState(() => ({\r\n            editMode: !this.state.editMode\r\n        }));\r\n        if (!this.state.editMode)this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.status != this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode\r\n                    ? <span onDoubleClick={this.toggleEditMode}>{this.state.status || \"No status\"}</span>\r\n                    : <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.toggleEditMode}\r\n                             value={this.state.status || \"No status\"}/>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const toggleEditMode = () => {\r\n        setEditMode(!editMode);\r\n        if (editMode) props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <span onDoubleClick={toggleEditMode}>{props.status || \"No status\"}</span>\r\n                : <input onChange={onStatusChange} onBlur={toggleEditMode} autoFocus={true}\r\n                         value={status || \"No status\"}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {ava, description} from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://42796r1ctbz645bo223zkcdl-wpengine.netdna-ssl.com/wp-content/uploads/2015/12/Snow-field-1260px.jpg'/>\r\n            </div>\r\n            <div className={description}>\r\n                <img className={ava} src={props.profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport {item} from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    const {message, likeCount} = props;\r\n    return (\r\n        <div className={item}>\r\n            <img src='https://images.theconversation.com/files/175247/original/file-20170622-26496-7ff7v5.jpg?ixlib=rb-1.1.0&q=45&auto=format&w=1200&h=900.0&fit=crop'/>\r\n            {message}\r\n            <div>\r\n                <span>like {likeCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport {posts, postsBlock} from './MyPosts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst PostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><Field placeholder={\"Add new post\"} component={Textarea} name={\"newPost\"} validate={[requiredField, maxLength10]}/></div>\r\n        <div><button>Add post</button></div>\r\n    </form>\r\n}\r\n\r\nconst PostFormRedux = reduxForm({\r\n    form: \"post\"\r\n})(PostForm)\r\n\r\nfunction MyPosts(props) {\r\n    console.log(\"render\")\r\n    let postsElements = props.posts.map(post =>\r\n        <Post message={post.message} likesCount={post.likesCount}/>\r\n    );\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPost);\r\n    }\r\n\r\n    return (\r\n        <div className={postsBlock}>\r\n            <h1>my posts</h1>\r\n            <PostFormRedux onSubmit={addPost}/>\r\n            <div className={posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost));\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n\r\n        <main >\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withLoginRedirect} from \"../../HOC/withLoginRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) userId = 19058;\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n})\r\n\r\nlet mapDispatchToProps = {\r\n    getProfile,\r\n    getStatus,\r\n    updateStatus\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRouter, withLoginRedirect)(ProfileContainer)\r\n\r\n","import React from \"react\";\r\nimport {header, loginBlock} from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={header}>\r\n            <img src='http://www.logobook.com/wp-content/uploads/2019/02/u_Bear_logo-1.svg'/>\r\n            <div className={loginBlock}>\r\n                {props.isLoggedIn\r\n                    ? <div>{props.login}<button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Log in</NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authUser, logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    login: state.auth.login,\r\n    logout: state.auth.logout\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n    logout\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormControls/FormControls.module.css\"\r\n\r\nconst maxLength28 = maxLengthCreator(28);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Login\"} name={\"login\"} component={Input} validate={[requiredField, maxLength28]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input}\r\n                       validate={[requiredField, maxLength28]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={\"input\"} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n            {props.error && <div className={style.formControl + \" \" + style.error}>{props.error}</div>}\r\n            <div>\r\n                <button>Log in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginFormRedux = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isLoggedIn) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginFormRedux onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.auth.isLoggedIn\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React, {Suspense} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar.jsx\";\nimport {Route, Switch, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {compose} from \"redux\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\n        if (!this.props.initialized) return <Preloader/>\n        return (\n//comment\n\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className='app-wrapper-content'>\n                        <Switch>\n                            <Route path='/dialogs'>\n                                <Suspense fallback={<Preloader/>}>\n                                    <DialogsContainer/>\n                                </Suspense>\n\n                            </Route>\n                            <Route path='/profile/:userId?'>\n                                <ProfileContainer/>\n                            </Route>\n                            <Route path='/users'>\n                                <Suspense fallback={<Preloader/>}>\n                                    <UsersContainer/>\n                                </Suspense>\n\n                            </Route>\n                            <Route path='/login'>\n                                <Login/>\n                            </Route>\n                            <Route path='/news'>\n                                <News/>\n                            </Route>\n                            <Route path='/music'>\n                                <Music/>\n                            </Route>\n                            <Route path='/settings'>\n                                <Settings/>\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.8cfb8211.svg\";","import preloader from \"../../../assets/images/Spinner-1s-200px.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return  <img src={preloader} style={{width: \"300px\"}}/>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__4W7ap\",\"error\":\"FormControls_error__3ySMq\"};","import React from \"react\";\r\nimport style from \"./FormControls.module.css\"\r\n\r\nconst FormControl = ({input, meta, element, ...props}) => {\r\n        const hasError = meta.touched && meta.error;\r\n        return (\r\n            <div className={style.formControl + ' ' + (hasError ? style.error : \"\")}>\r\n                {props.children}<br/>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, element, ...restprops} = props\r\n    return <FormControl {...props}><textarea {...input} {...restprops}/></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, element, ...restprops} = props\r\n    return <FormControl {...props}><input {...input} {...restprops}/></FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__2eM1a\",\"description\":\"ProfileInfo_description__1yX8c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3Zyqz\",\"posts\":\"MyPosts_posts__18yLC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3yzQd\",\"loginBlock\":\"Header_loginBlock__2MvdZ\"};"],"sourceRoot":""}